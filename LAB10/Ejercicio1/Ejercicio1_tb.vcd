$date
	Sun Nov 08 00:02:03 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 4 ! Y1 [3:0] $end
$var wire 4 " Y [3:0] $end
$var reg 1 # EN1 $end
$var reg 1 $ EN2 $end
$var reg 1 % clk $end
$var reg 1 & ldbit $end
$var reg 12 ' load [11:0] $end
$var reg 1 ( reset $end
$scope module a1 $end
$var wire 1 # EN1 $end
$var wire 1 $ EN2 $end
$var wire 1 % clk $end
$var wire 1 & ldbit $end
$var wire 12 ) load [11:0] $end
$var wire 1 ( reset $end
$var wire 4 * Y1 [3:0] $end
$var wire 4 + Y [3:0] $end
$var wire 8 , B [7:0] $end
$var wire 12 - A [11:0] $end
$scope module f1 $end
$var wire 1 # EN $end
$var wire 12 . LD [11:0] $end
$var wire 1 & LDEN $end
$var wire 1 % clk $end
$var wire 1 ( reset $end
$var reg 12 / Q [11:0] $end
$upscope $end
$scope module f2 $end
$var wire 12 0 D [11:0] $end
$var wire 8 1 Dout [7:0] $end
$upscope $end
$scope module f3 $end
$var wire 8 2 D [7:0] $end
$var wire 1 $ EN $end
$var wire 1 % clk $end
$var wire 1 ( reset $end
$var wire 4 3 Q1 [3:0] $end
$var wire 4 4 Q [3:0] $end
$scope module a1 $end
$var wire 4 5 D [3:0] $end
$var wire 1 $ EN $end
$var wire 1 % clk $end
$var wire 1 ( reset $end
$var reg 4 6 Q [3:0] $end
$upscope $end
$scope module a2 $end
$var wire 4 7 D [3:0] $end
$var wire 1 $ EN $end
$var wire 1 % clk $end
$var wire 1 ( reset $end
$var reg 4 8 Q [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
b0 .
bx -
bx ,
bx +
bx *
b0 )
0(
b0 '
0&
0%
0$
0#
bx "
bx !
$end
#1
b1010 5
b1 7
b10100001 ,
b10100001 1
b10100001 2
b0 -
b0 /
b0 0
b0 "
b0 +
b0 4
b0 6
b0 !
b0 *
b0 3
b0 8
1(
1%
#2
1$
1#
0(
0%
#3
b1011 5
b10 7
b10110010 ,
b10110010 1
b10110010 2
b1 -
b1 /
b1 0
b1 !
b1 *
b1 3
b1 8
b1010 "
b1010 +
b1010 4
b1010 6
1%
#4
b1 '
b1 )
b1 .
0%
#5
b1011 "
b1011 +
b1011 4
b1011 6
b10 !
b10 *
b10 3
b10 8
1&
1%
#6
0%
#7
1%
#8
0%
#9
1%
#10
0%
#11
b100 5
b11 7
b1000011 ,
b1000011 1
b1000011 2
b10 -
b10 /
b10 0
1%
0&
#12
0%
#13
b1110 5
b1110 7
b11101110 ,
b11101110 1
b11101110 2
b11 -
b11 /
b11 0
b100 "
b100 +
b100 4
b100 6
b11 !
b11 *
b11 3
b11 8
1%
#14
0%
#15
b101 5
b101 7
b1010101 ,
b1010101 1
b1010101 2
b100 -
b100 /
b100 0
b1110 !
b1110 *
b1110 3
b1110 8
b1110 "
b1110 +
b1110 4
b1110 6
1%
#16
0%
#17
b1111 5
b1111 7
b11111111 ,
b11111111 1
b11111111 2
b101 -
b101 /
b101 0
b101 "
b101 +
b101 4
b101 6
b101 !
b101 *
b101 3
b101 8
1%
#18
0%
#19
b110 5
b110 7
b1100110 ,
b1100110 1
b1100110 2
b110 -
b110 /
b110 0
b1111 !
b1111 *
b1111 3
b1111 8
b1111 "
b1111 +
b1111 4
b1111 6
1%
#20
0%
#21
b1100 5
b100 7
b11000100 ,
b11000100 1
b11000100 2
b111 -
b111 /
b111 0
b110 "
b110 +
b110 4
b110 6
b110 !
b110 *
b110 3
b110 8
1%
#22
0%
#23
b100 5
b1110 7
b1001110 ,
b1001110 1
b1001110 2
b1000 -
b1000 /
b1000 0
b100 !
b100 *
b100 3
b100 8
b1100 "
b1100 +
b1100 4
b1100 6
1%
#24
0%
#25
b1100 5
b1111 7
b11001111 ,
b11001111 1
b11001111 2
b1001 -
b1001 /
b1001 0
b100 "
b100 +
b100 4
b100 6
b1110 !
b1110 *
b1110 3
b1110 8
1%
