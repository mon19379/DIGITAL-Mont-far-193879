$date
	Sat Nov 07 23:48:58 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! Z $end
$var wire 4 " Ou [3:0] $end
$var wire 1 # C $end
$var reg 1 $ EB1 $end
$var reg 1 % EB2 $end
$var reg 1 & EN $end
$var reg 3 ' S [2:0] $end
$var reg 1 ( clk $end
$var reg 4 ) in [3:0] $end
$var reg 1 * rst $end
$scope module r $end
$var wire 1 $ EB1 $end
$var wire 1 % EB2 $end
$var wire 1 & EN $end
$var wire 3 + S [2:0] $end
$var wire 1 ( clk $end
$var wire 4 , in [3:0] $end
$var wire 1 * reset $end
$var wire 1 ! Z $end
$var wire 4 - Ou [3:0] $end
$var wire 4 . O [3:0] $end
$var wire 1 # C $end
$var wire 4 / B [3:0] $end
$var wire 4 0 AC [3:0] $end
$scope module f1 $end
$var wire 1 $ EN $end
$var wire 4 1 S [3:0] $end
$var wire 4 2 Q [3:0] $end
$upscope $end
$scope module f2 $end
$var wire 1 & EN $end
$var wire 1 ( clk $end
$var wire 1 * reset $end
$var wire 4 3 Q [3:0] $end
$var wire 4 4 D [3:0] $end
$scope module a3 $end
$var wire 2 5 D [1:0] $end
$var wire 1 & EN $end
$var wire 1 ( clk $end
$var wire 1 * reset $end
$var wire 2 6 Q [1:0] $end
$scope module a1 $end
$var wire 1 7 D $end
$var wire 1 & EN $end
$var wire 1 ( clk $end
$var wire 1 * reset $end
$var reg 1 8 Q $end
$upscope $end
$scope module a2 $end
$var wire 1 9 D $end
$var wire 1 & EN $end
$var wire 1 ( clk $end
$var wire 1 * reset $end
$var reg 1 : Q $end
$upscope $end
$upscope $end
$scope module a4 $end
$var wire 2 ; D [1:0] $end
$var wire 1 & EN $end
$var wire 1 ( clk $end
$var wire 1 * reset $end
$var wire 2 < Q [1:0] $end
$scope module a1 $end
$var wire 1 = D $end
$var wire 1 & EN $end
$var wire 1 ( clk $end
$var wire 1 * reset $end
$var reg 1 > Q $end
$upscope $end
$scope module a2 $end
$var wire 1 ? D $end
$var wire 1 & EN $end
$var wire 1 ( clk $end
$var wire 1 * reset $end
$var reg 1 @ Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 4 A B [3:0] $end
$var wire 3 B S [2:0] $end
$var wire 4 C W [3:0] $end
$var reg 5 D A [4:0] $end
$var reg 1 # C $end
$var reg 4 E O [3:0] $end
$var reg 1 ! Z $end
$upscope $end
$scope module f4 $end
$var wire 1 % EN $end
$var wire 4 F S [3:0] $end
$var wire 4 G Q [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bz G
bz F
bz E
b0zzzz D
bx C
b10 B
bz A
x@
z?
x>
z=
bx <
bz ;
x:
z9
x8
z7
bx 6
bz 5
bz 4
bx 3
bz 2
b11 1
bx 0
bz /
bz .
bz -
b11 ,
b10 +
0*
b11 )
0(
b10 '
0&
0%
0$
0#
bz "
0!
$end
#2
1(
#4
b0zzzz D
0@
b0 <
0>
0:
b0 0
b0 3
b0 C
b0 6
08
0(
1*
#6
1(
#8
0(
0*
#10
1(
#12
0(
0=
0?
17
19
b11 "
b11 -
b11 G
b0 ;
b11 5
b11 .
b11 4
b11 E
b11 F
b11 D
b11 /
b11 2
b11 A
1&
1$
1%
#14
b11 D
18
b11 0
b11 3
b11 C
b11 6
1:
1(
#16
0(
b10 /
b10 2
b10 A
b11 D
b10 )
b10 ,
b10 1
b0 '
b0 +
b0 B
#18
1(
#20
0(
0&
#22
1(
#24
0(
09
b1 "
b1 -
b1 G
b1 5
b1 .
b1 4
b1 E
b1 F
b1 D
b1 '
b1 +
b1 B
#26
1(
#28
0(
1=
b101 "
b101 -
b101 G
b1 ;
b101 .
b101 4
b101 E
b101 F
b101 D
b11 '
b11 +
b11 B
#30
1(
#32
0(
1?
b1101 "
b1101 -
b1101 G
b11 ;
b1101 .
b1101 4
b1101 E
b1101 F
b11101 D
b100 '
b100 +
b100 B
#34
1(
#36
0(
