$date
	Thu Nov 19 23:38:15 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! c_flag $end
$var wire 4 " data_bus [3:0] $end
$var wire 1 # z_flag $end
$var wire 8 $ program_byte [7:0] $end
$var wire 1 % phase $end
$var wire 4 & oprnd [3:0] $end
$var wire 4 ' instr [3:0] $end
$var wire 12 ( address_RAM [11:0] $end
$var wire 4 ) accu [3:0] $end
$var wire 12 * PC [11:0] $end
$var wire 4 + FF_out [3:0] $end
$var reg 1 , clock $end
$var reg 4 - pushbuttons [3:0] $end
$var reg 1 . reset $end
$var integer 32 / immediateDelay [31:0] $end
$var integer 32 0 jumpDelay [31:0] $end
$var integer 32 1 memoryDelay [31:0] $end
$var integer 32 2 nota [31:0] $end
$scope module uPmodule $end
$var wire 1 ! c_flag $end
$var wire 1 , clock $end
$var wire 4 3 data_bus [3:0] $end
$var wire 4 4 pushbuttons [3:0] $end
$var wire 1 . reset $end
$var wire 1 # z_flag $end
$var wire 8 5 program_byte [7:0] $end
$var wire 1 % phase $end
$var wire 4 6 oprnd [3:0] $end
$var wire 4 7 instr [3:0] $end
$var wire 13 8 decode_O [12:0] $end
$var wire 7 9 decode_I [6:0] $end
$var wire 12 : address_RAM [11:0] $end
$var wire 4 ; accu [3:0] $end
$var wire 1 < Zero $end
$var wire 1 = Z_flag $end
$var wire 12 > PC [11:0] $end
$var wire 4 ? FF_out [3:0] $end
$var wire 1 @ Carry $end
$var wire 1 A C_flag $end
$var wire 4 B ALU_Out [3:0] $end
$scope module acumul $end
$var wire 1 C EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var wire 4 D Q [3:0] $end
$var wire 4 E D [3:0] $end
$scope module a3 $end
$var wire 2 F D [1:0] $end
$var wire 1 C EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var wire 2 G Q [1:0] $end
$scope module a1 $end
$var wire 1 H D $end
$var wire 1 C EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 I Q $end
$upscope $end
$scope module a2 $end
$var wire 1 J D $end
$var wire 1 C EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 K Q $end
$upscope $end
$upscope $end
$scope module a4 $end
$var wire 2 L D [1:0] $end
$var wire 1 C EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var wire 2 M Q [1:0] $end
$scope module a1 $end
$var wire 1 N D $end
$var wire 1 C EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 O Q $end
$upscope $end
$scope module a2 $end
$var wire 1 P D $end
$var wire 1 C EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 Q Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module alu $end
$var wire 4 R B [3:0] $end
$var wire 3 S S [2:0] $end
$var wire 4 T W [3:0] $end
$var reg 5 U A [4:0] $end
$var reg 1 @ C $end
$var reg 4 V O [3:0] $end
$var reg 1 < Z $end
$upscope $end
$scope module aluo $end
$var wire 4 W A [3:0] $end
$var wire 1 X EN $end
$var wire 4 Y out [3:0] $end
$upscope $end
$scope module conta $end
$var wire 1 Z EN $end
$var wire 12 [ LD [11:0] $end
$var wire 1 \ LDEN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 12 ] Q [11:0] $end
$upscope $end
$scope module deco $end
$var wire 7 ^ A [6:0] $end
$var reg 13 _ Y [12:0] $end
$upscope $end
$scope module fetch $end
$var wire 1 ` EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var wire 4 a Q1 [3:0] $end
$var wire 4 b Q [3:0] $end
$var wire 8 c D [7:0] $end
$scope module a1 $end
$var wire 4 d D [3:0] $end
$var wire 1 ` EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 4 e Q [3:0] $end
$upscope $end
$scope module a2 $end
$var wire 4 f D [3:0] $end
$var wire 1 ` EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 4 g Q [3:0] $end
$upscope $end
$upscope $end
$scope module fetcho $end
$var wire 4 h A [3:0] $end
$var wire 1 i EN $end
$var wire 4 j out [3:0] $end
$upscope $end
$scope module flags $end
$var wire 2 k D [1:0] $end
$var wire 1 l EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var wire 2 m Q [1:0] $end
$scope module a1 $end
$var wire 1 n D $end
$var wire 1 l EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 o Q $end
$upscope $end
$scope module a2 $end
$var wire 1 p D $end
$var wire 1 l EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 q Q $end
$upscope $end
$upscope $end
$scope module in $end
$var wire 4 r A [3:0] $end
$var wire 1 s EN $end
$var wire 4 t out [3:0] $end
$upscope $end
$scope module pha $end
$var wire 1 u D $end
$var wire 1 v EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var wire 1 % Q1 $end
$scope module a1 $end
$var wire 1 u D $end
$var wire 1 v EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 % Q $end
$upscope $end
$upscope $end
$scope module ram $end
$var wire 12 w adr [11:0] $end
$var wire 1 x chips $end
$var wire 4 y data [3:0] $end
$var wire 1 z wrte $end
$var reg 4 { out [3:0] $end
$scope begin MEM_rd $end
$upscope $end
$scope begin MEM_write $end
$upscope $end
$upscope $end
$scope module rom $end
$var wire 12 | D [11:0] $end
$var wire 8 } Dout [7:0] $end
$upscope $end
$scope module sal $end
$var wire 4 ~ D [3:0] $end
$var wire 1 !" EN $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 4 "" Q [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ""
x!"
bx ~
bx }
bx |
bx {
xz
bx y
xx
bx w
1v
xu
bx t
xs
b110 r
xq
xp
xo
xn
bx m
xl
bx k
bx j
xi
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
x`
bx _
bzxxxxxx ^
bx ]
x\
bx [
xZ
bx Y
xX
bx W
bx V
bx U
bx T
bx S
bx R
xQ
xP
xO
xN
bx M
bx L
xK
xJ
xI
xH
bx G
bx F
bx E
bx D
xC
bx B
xA
x@
bx ?
bx >
x=
x<
bx ;
bx :
bzxxxxxx 9
bx 8
bx 7
bx 6
bx 5
b110 4
bx 3
b0 2
b100010100 1
b1010010000 0
b10000 /
0.
b110 -
0,
bx +
bx *
bx )
bx (
bx '
bx &
x%
bx $
z#
bx "
z!
$end
#2
b0 "
b0 3
b0 R
b0 Y
b0 j
b0 t
b0 y
b0 ~
0N
0P
0H
0J
b0 L
b0 F
0n
0p
b0 B
b0 E
b0 V
b0 W
0<
b0 k
0@
b0 U
0!"
0i
1X
0s
0z
0x
b0 S
0C
0l
0\
1Z
1u
b1000000001000 8
b1000000001000 _
1`
0=
0A
b1111 f
b100 d
b0 '
b0 7
b0 b
b0 e
b0 &
b0 6
b0 a
b0 g
b0 h
bz000000 9
bz000000 ^
0%
0o
b0 m
0q
0I
b0 G
0K
0O
b0 )
b0 ;
b0 D
b0 T
b0 M
0Q
b0 +
b0 ?
b0 ""
b1001111 (
b1001111 :
b1001111 [
b1001111 w
b1001111 $
b1001111 5
b1001111 c
b1001111 }
b0 *
b0 >
b0 ]
b0 |
1.
#3
0.
#5
0u
0`
b1101 d
1%
b1111 &
b1111 6
b1111 a
b1111 g
b1111 h
bz010100 9
bz010100 ^
b100 '
b100 7
b100 b
b100 e
b111111011111 (
b111111011111 :
b111111011111 [
b111111011111 w
b11011111 $
b11011111 5
b11011111 c
b11011111 }
b1 *
b1 >
b1 ]
b1 |
1,
#10
0,
#15
1u
1`
b1 f
b101 d
bz000100 9
bz000100 ^
0%
b111101010001 (
b111101010001 :
b111101010001 [
b111101010001 w
b1010001 $
b1010001 5
b1010001 c
b1010001 }
b10 *
b10 >
b10 ]
b10 |
1,
#20
0,
#25
1N
1P
1H
1J
b11 L
b11 F
1p
b1111 B
b1111 E
b1111 V
b1111 W
1@
b11111 U
0n
b1 "
b1 3
b1 R
b1 Y
b1 j
b1 t
b1 y
b1 ~
b10 k
0<
1i
0X
b1 S
1l
0Z
0u
0`
b1001000010 8
b1001000010 _
b0 f
b100 d
1%
b1 &
b1 6
b1 a
b1 g
b1 h
bz010101 9
bz010101 ^
b101 '
b101 7
b101 b
b101 e
b101000000 (
b101000000 :
b101000000 [
b101000000 w
b1000000 $
b1000000 5
b1000000 c
b1000000 }
b11 *
b11 >
b11 ]
b11 |
1,
#30
0,
#35
bx f
bx d
b1xxxxxxxx (
b1xxxxxxxx :
b1xxxxxxxx [
b1xxxxxxxx w
bx $
bx 5
bx c
bx }
b101000000 *
b101000000 >
b101000000 ]
b101000000 |
0N
0P
0H
0J
b0 L
b0 F
0p
b0 "
b0 3
b0 R
b0 Y
b0 j
b0 t
b0 y
b0 ~
b0 B
b0 E
b0 V
b0 W
b0 k
0@
b0 U
0i
1X
b0 S
0l
1\
1u
b100000001000 8
b100000001000 _
1`
1A
bz000101 9
bz000101 ^
0%
b10 m
1q
1,
#40
0,
#45
0\
1Z
0u
0`
b1000000001000 8
b1000000001000 _
1%
bx (
bx :
bx [
bx w
bx &
bx 6
bx a
bx g
bx h
bz01xxxx 9
bz01xxxx ^
bx '
bx 7
bx b
bx e
b1xxxxxxxx *
b1xxxxxxxx >
b1xxxxxxxx ]
b1xxxxxxxx |
1,
#50
0,
#55
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
bx *
bx >
bx ]
bx |
1,
#60
0,
#65
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#70
0,
#75
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#80
0,
#85
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#90
0,
#95
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#100
0,
#105
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#110
0,
#115
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#120
0,
#125
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#130
0,
#135
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#140
0,
#145
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#150
0,
#155
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#160
0,
#165
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#170
0,
#175
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#180
0,
#185
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#190
0,
#195
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#200
0,
#205
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#210
0,
#215
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#220
0,
#225
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#230
0,
#235
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#236
b1110 -
b1110 4
b1110 r
#240
0,
#245
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#250
0,
#255
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#260
0,
#265
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#270
0,
#275
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#280
0,
#285
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#290
0,
#295
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#300
0,
#305
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#310
0,
#315
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#320
0,
#325
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#330
0,
#335
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#340
0,
#345
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#350
0,
#355
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#360
0,
#365
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#370
0,
#375
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#380
0,
#385
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#390
0,
#395
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#400
0,
#405
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#410
0,
#415
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#420
0,
#425
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#430
0,
#435
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#440
0,
#445
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#450
0,
#455
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#460
0,
#465
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#470
0,
#475
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#480
0,
#485
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#490
0,
#495
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#500
0,
#505
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#510
0,
#515
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#520
0,
#525
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#530
0,
#535
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#540
0,
#545
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#550
0,
#555
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#560
0,
#565
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#570
0,
#575
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#580
0,
#585
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#590
0,
#595
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#600
0,
#605
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#610
0,
#615
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#620
0,
#625
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#630
0,
#635
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#640
0,
#645
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#650
0,
#655
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#660
0,
#665
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#670
0,
#675
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#680
0,
#685
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#690
0,
#695
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#700
0,
#705
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#710
0,
#715
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#720
0,
#725
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#730
0,
#735
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#740
0,
#745
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#750
0,
#755
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#760
0,
#765
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#770
0,
#775
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#780
0,
#785
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#790
0,
#795
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#800
0,
#805
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#810
0,
#815
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#820
0,
#825
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#830
0,
#835
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#840
0,
#845
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#850
0,
#855
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#860
0,
#865
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#870
0,
#875
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#880
0,
#885
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#890
0,
#895
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#900
0,
#905
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#910
0,
#915
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#920
0,
#925
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#930
0,
#935
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#940
0,
#945
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#950
0,
#955
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#960
0,
#965
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#970
0,
#975
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#980
0,
#985
0u
0`
bz01xxxx 9
bz01xxxx ^
1%
1,
#990
0,
#995
1u
1`
bz00xxxx 9
bz00xxxx ^
0%
1,
#1000
0,
